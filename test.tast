SOURCE_FILE@[0; 417)
  IMPORT_DEF@[0; 27)
    IMPORT_KW@[0; 6) "import"
    WHITESPACE@[6; 7) " "
    IMPORT_SEGMENT@[7; 10)
      NAME@[7; 10)
        IDENT@[7; 10) "foo"
    COLON_COLON@[10; 12) "::"
    IMPORT_SEGMENT@[12; 15)
      NAME@[12; 15)
        IDENT@[12; 15) "bar"
    COLON_COLON@[15; 17) "::"
    IMPORT_LIST@[17; 26)
      L_CURLY@[17; 18) "{"
      IMPORT_SEGMENT@[18; 21)
        NAME@[18; 21)
          IDENT@[18; 21) "bar"
      COMMA@[21; 22) ","
      IMPORT_SEGMENT@[22; 25)
        NAME@[22; 25)
          IDENT@[22; 25) "Foo"
      R_CURLY@[25; 26) "}"
    SEMI@[26; 27) ";"
  WHITESPACE@[27; 29) "\n\n"
  TYPE_ALIAS_DEF@[29; 66)
    TYPE_KW@[29; 33) "type"
    WHITESPACE@[33; 34) " "
    NAME@[34; 46)
      IDENT@[34; 46) "ParserResult"
    TYPE_PARAM_LIST@[46; 49)
      L_ANGLE@[46; 47) "<"
      TYPE_PARAM@[47; 48)
        NAME@[47; 48)
          IDENT@[47; 48) "T"
      R_ANGLE@[48; 49) ">"
    WHITESPACE@[49; 50) " "
    EQ@[50; 51) "="
    WHITESPACE@[51; 52) " "
    IDENT_TYPE@[52; 65)
      IDENT@[52; 58) "Result"
      TYPE_ARG_LIST@[58; 65)
        L_ANGLE@[58; 59) "<"
        IDENT_TYPE@[59; 60)
          IDENT@[59; 60) "T"
        COMMA@[60; 61) ","
        IDENT_TYPE@[61; 64)
          IDENT@[61; 64) "Foo"
        R_ANGLE@[64; 65) ">"
    SEMI@[65; 66) ";"
  WHITESPACE@[66; 68) "\n\n"
  MOD_DEF@[68; 76)
    MOD_KW@[68; 71) "mod"
    WHITESPACE@[71; 72) " "
    NAME@[72; 75)
      IDENT@[72; 75) "bar"
    SEMI@[75; 76) ";"
  WHITESPACE@[76; 77) "\n"
  MOD_DEF@[77; 85)
    MOD_KW@[77; 80) "mod"
    WHITESPACE@[80; 81) " "
    NAME@[81; 84)
      IDENT@[81; 84) "foo"
    SEMI@[84; 85) ";"
  WHITESPACE@[85; 87) "\n\n"
  FN_DEF@[87; 325)
    VISIBILITY@[87; 93)
      EXPORT_KW@[87; 93) "export"
    WHITESPACE@[93; 94) " "
    FN_KW@[94; 96) "fn"
    WHITESPACE@[96; 97) " "
    NAME@[97; 101)
      IDENT@[97; 101) "main"
    PARAM_LIST@[101; 103)
      L_PAREN@[101; 102) "("
      R_PAREN@[102; 103) ")"
    WHITESPACE@[103; 105) "  "
    BLOCK_EXPR@[105; 325)
      BLOCK@[105; 325)
        L_CURLY@[105; 106) "{"
        WHITESPACE@[106; 112) " \n    "
        LET_STMT@[112; 121)
          LET_KW@[112; 115) "let"
          WHITESPACE@[115; 116) " "
          BIND_PAT@[116; 117)
            NAME@[116; 117)
              IDENT@[116; 117) "x"
          EQ@[117; 118) "="
          WHITESPACE@[118; 119) " "
          LITERAL@[119; 121)
            INT_NUMBER@[119; 121) "10"
        SEMI@[121; 122) ";"
        WHITESPACE@[122; 127) "\n    "
        LET_STMT@[127; 136)
          LET_KW@[127; 130) "let"
          WHITESPACE@[130; 131) " "
          BIND_PAT@[131; 132)
            NAME@[131; 132)
              IDENT@[131; 132) "x"
          WHITESPACE@[132; 133) " "
          EQ@[133; 134) "="
          LITERAL@[134; 136)
            INT_NUMBER@[134; 136) "10"
        SEMI@[136; 137) ";"
        WHITESPACE@[137; 142) "\n    "
        LET_STMT@[142; 150)
          LET_KW@[142; 145) "let"
          WHITESPACE@[145; 146) " "
          BIND_PAT@[146; 147)
            NAME@[146; 147)
              IDENT@[146; 147) "x"
          WHITESPACE@[147; 148) " "
          EQ@[148; 149) "="
          IDENT_EXPR@[149; 150)
            NAME@[149; 150)
              IDENT@[149; 150) "x"
        SEMI@[150; 151) ";"
        WHITESPACE@[151; 157) "\n\n    "
        LET_STMT@[157; 171)
          LET_KW@[157; 160) "let"
          WHITESPACE@[160; 161) " "
          BIND_PAT@[161; 162)
            NAME@[161; 162)
              IDENT@[161; 162) "x"
          COLON@[162; 163) ":"
          IDENT_TYPE@[163; 167)
            IDENT@[163; 166) "i64"
            WHITESPACE@[166; 167) " "
          EQ@[167; 168) "="
          WHITESPACE@[168; 169) " "
          LITERAL@[169; 171)
            INT_NUMBER@[169; 171) "19"
        SEMI@[171; 172) ";"
        WHITESPACE@[172; 177) "\n    "
        EXPR_STMT@[177; 196)
          CALL_EXPR@[177; 196)
            IDENT_EXPR@[177; 194)
              NAME@[177; 194)
                IDENT@[177; 179) "id"
                COLON_COLON@[179; 181) "::"
                TYPE_ARG_LIST@[181; 194)
                  L_ANGLE@[181; 182) "<"
                  IDENT_TYPE@[182; 185)
                    IDENT@[182; 185) "i32"
                  COMMA@[185; 186) ","
                  IDENT_TYPE@[186; 189)
                    IDENT@[186; 189) "f32"
                  COMMA@[189; 190) ","
                  IDENT_TYPE@[190; 193)
                    IDENT@[190; 193) "i32"
                  R_ANGLE@[193; 194) ">"
            ARG_LIST@[194; 196)
              L_PAREN@[194; 195) "("
              R_PAREN@[195; 196) ")"
        SEMI@[196; 197) ";"
        WHITESPACE@[197; 202) "\n    "
        EXPR_STMT@[202; 209)
          CALL_EXPR@[202; 209)
            CALL_EXPR@[202; 206)
              IDENT_EXPR@[202; 203)
                NAME@[202; 203)
                  IDENT@[202; 203) "v"
              ARG_LIST@[203; 206)
                L_PAREN@[203; 204) "("
                IDENT_EXPR@[204; 205)
                  NAME@[204; 205)
                    IDENT@[204; 205) "a"
                R_PAREN@[205; 206) ")"
            ARG_LIST@[206; 209)
              L_PAREN@[206; 207) "("
              IDENT_EXPR@[207; 208)
                NAME@[207; 208)
                  IDENT@[207; 208) "b"
              R_PAREN@[208; 209) ")"
        SEMI@[209; 210) ";"
        WHITESPACE@[210; 216) "\n\n    "
        EXPR_STMT@[216; 267)
          FOR_EXPR@[216; 267)
            FOR_KW@[216; 219) "for"
            L_PAREN@[219; 220) "("
            LET_STMT@[220; 227)
              LET_KW@[220; 223) "let"
              WHITESPACE@[223; 224) " "
              BIND_PAT@[224; 225)
                NAME@[224; 225)
                  IDENT@[224; 225) "i"
              EQ@[225; 226) "="
              LITERAL@[226; 227)
                INT_NUMBER@[226; 227) "0"
            SEMI@[227; 228) ";"
            BIN_EXPR@[228; 232)
              IDENT_EXPR@[228; 229)
                NAME@[228; 229)
                  IDENT@[228; 229) "i"
              L_ANGLE@[229; 230) "<"
              LITERAL@[230; 232)
                INT_NUMBER@[230; 232) "10"
            SEMI@[232; 233) ";"
            BIN_EXPR@[233; 237)
              IDENT_EXPR@[233; 234)
                NAME@[233; 234)
                  IDENT@[233; 234) "i"
              PLUSEQ@[234; 236) "+="
              LITERAL@[236; 237)
                INT_NUMBER@[236; 237) "1"
            R_PAREN@[237; 238) ")"
            WHITESPACE@[238; 239) " "
            BLOCK_EXPR@[239; 267)
              BLOCK@[239; 267)
                L_CURLY@[239; 240) "{"
                WHITESPACE@[240; 249) "\n        "
                EXPR_STMT@[249; 260)
                  CALL_EXPR@[249; 260)
                    IDENT_EXPR@[249; 254)
                      NAME@[249; 254)
                        IDENT@[249; 254) "print"
                    ARG_LIST@[254; 260)
                      L_PAREN@[254; 255) "("
                      LITERAL@[255; 259)
                        STRING@[255; 259) "\"ok\""
                      R_PAREN@[259; 260) ")"
                SEMI@[260; 261) ";"
                WHITESPACE@[261; 266) "\n    "
                R_CURLY@[266; 267) "}"
        SEMI@[267; 268) ";"
        WHITESPACE@[268; 279) "\n\n    \n    "
        EXPR_STMT@[279; 322)
          IF_EXPR@[279; 322)
            IF_KW@[279; 281) "if"
            WHITESPACE@[281; 282) " "
            CONDITION@[282; 287)
              LITERAL@[282; 286)
                TRUE_KW@[282; 286) "true"
              WHITESPACE@[286; 287) " "
            BLOCK_EXPR@[287; 302)
              BLOCK@[287; 302)
                L_CURLY@[287; 288) "{"
                EXPR_STMT@[288; 301)
                  CALL_EXPR@[288; 301)
                    IDENT_EXPR@[288; 293)
                      NAME@[288; 293)
                        IDENT@[288; 293) "print"
                    ARG_LIST@[293; 301)
                      L_PAREN@[293; 294) "("
                      LITERAL@[294; 300)
                        STRING@[294; 300) "\"good\""
                      R_PAREN@[300; 301) ")"
                R_CURLY@[301; 302) "}"
            WHITESPACE@[302; 303) " "
            ELSE_KW@[303; 307) "else"
            WHITESPACE@[307; 308) " "
            BLOCK_EXPR@[308; 322)
              BLOCK@[308; 322)
                L_CURLY@[308; 309) "{"
                EXPR_STMT@[309; 321)
                  CALL_EXPR@[309; 321)
                    IDENT_EXPR@[309; 314)
                      NAME@[309; 314)
                        IDENT@[309; 314) "print"
                    ARG_LIST@[314; 321)
                      L_PAREN@[314; 315) "("
                      LITERAL@[315; 320)
                        STRING@[315; 320) "\"bad\""
                      R_PAREN@[320; 321) ")"
                R_CURLY@[321; 322) "}"
        SEMI@[322; 323) ";"
        WHITESPACE@[323; 324) "\n"
        R_CURLY@[324; 325) "}"
  WHITESPACE@[325; 330) "\n\n\n\n\n"
  FN_DEF@[330; 417)
    VISIBILITY@[330; 336)
      EXPORT_KW@[330; 336) "export"
    WHITESPACE@[336; 337) " "
    FN_KW@[337; 339) "fn"
    WHITESPACE@[339; 340) " "
    NAME@[340; 342)
      IDENT@[340; 342) "id"
    TYPE_PARAM_LIST@[342; 345)
      L_ANGLE@[342; 343) "<"
      TYPE_PARAM@[343; 344)
        NAME@[343; 344)
          IDENT@[343; 344) "T"
      R_ANGLE@[344; 345) ">"
    PARAM_LIST@[345; 358)
      L_PAREN@[345; 346) "("
      PARAM@[346; 349)
        BIND_PAT@[346; 347)
          NAME@[346; 347)
            IDENT@[346; 347) "a"
        COLON@[347; 348) ":"
        IDENT_TYPE@[348; 349)
          IDENT@[348; 349) "T"
      COMMA@[349; 350) ","
      PARAM@[350; 357)
        TUPLE_PAT@[350; 355)
          L_PAREN@[350; 351) "("
          BIND_PAT@[351; 352)
            NAME@[351; 352)
              IDENT@[351; 352) "x"
          COMMA@[352; 353) ","
          BIND_PAT@[353; 354)
            NAME@[353; 354)
              IDENT@[353; 354) "z"
          R_PAREN@[354; 355) ")"
        COLON@[355; 356) ":"
        IDENT_TYPE@[356; 357)
          IDENT@[356; 357) "T"
      R_PAREN@[357; 358) ")"
    WHITESPACE@[358; 359) " "
    RET_TYPE@[359; 369)
      FRETURN@[359; 361) "->"
      WHITESPACE@[361; 362) " "
      PAREN_TYPE@[362; 369)
        L_PAREN@[362; 363) "("
        IDENT_TYPE@[363; 364)
          IDENT@[363; 364) "T"
        COMMA@[364; 365) ","
        IDENT_TYPE@[365; 368)
          IDENT@[365; 368) "i32"
        R_PAREN@[368; 369) ")"
    WHITESPACE@[369; 370) " "
    BLOCK_EXPR@[370; 417)
      BLOCK@[370; 417)
        L_CURLY@[370; 371) "{"
        WHITESPACE@[371; 376) "\n    "
        LET_STMT@[376; 394)
          LET_KW@[376; 379) "let"
          WHITESPACE@[379; 380) " "
          TUPLE_PAT@[380; 389)
            L_PAREN@[380; 381) "("
            BIND_PAT@[381; 382)
              NAME@[381; 382)
                IDENT@[381; 382) "y"
            COMMA@[382; 383) ","
            TUPLE_PAT@[383; 388)
              L_PAREN@[383; 384) "("
              BIND_PAT@[384; 385)
                NAME@[384; 385)
                  IDENT@[384; 385) "x"
              COMMA@[385; 386) ","
              BIND_PAT@[386; 387)
                NAME@[386; 387)
                  IDENT@[386; 387) "y"
              R_PAREN@[387; 388) ")"
            R_PAREN@[388; 389) ")"
          WHITESPACE@[389; 390) " "
          EQ@[390; 391) "="
          WHITESPACE@[391; 392) " "
          LITERAL@[392; 394)
            INT_NUMBER@[392; 394) "10"
        SEMI@[394; 395) ";"
        WHITESPACE@[395; 405) "\n    \n    "
        LET_STMT@[405; 414)
          LET_KW@[405; 408) "let"
          WHITESPACE@[408; 409) " "
          BIND_PAT@[409; 410)
            NAME@[409; 410)
              IDENT@[409; 410) "x"
          WHITESPACE@[410; 411) " "
          EQ@[411; 412) "="
          LITERAL@[412; 414)
            INT_NUMBER@[412; 414) "10"
        SEMI@[414; 415) ";"
        WHITESPACE@[415; 416) "\n"
        R_CURLY@[416; 417) "}"

[{}, {}]
[{}]
[{}, {}]
[{}]
Call { callee: ExprId(6), args: [ExprId(7)], type_args: Span { item: [], start: 202, end: 203 } }
[{}, {NameId(6): LocalData { state: Span { item: Defined, start: 161, end: 162 }, reads: 0 }}, {NameId(12): LocalData { state: Span { item: Read, start: 233, end: 234 }, reads: 1 }}, {}, {}]
[{}, {NameId(6): LocalData { state: Span { item: Defined, start: 161, end: 162 }, reads: 0 }}, {NameId(12): LocalData { state: Span { item: Read, start: 233, end: 234 }, reads: 1 }}, {}]
[{}, {NameId(6): LocalData { state: Span { item: Defined, start: 161, end: 162 }, reads: 0 }}, {NameId(12): LocalData { state: Span { item: Read, start: 233, end: 234 }, reads: 1 }}]
[{}, {NameId(6): LocalData { state: Span { item: Defined, start: 161, end: 162 }, reads: 0 }}, {}]
[{}, {NameId(6): LocalData { state: Span { item: Defined, start: 161, end: 162 }, reads: 0 }}, {}]
[{}, {NameId(6): LocalData { state: Span { item: Defined, start: 161, end: 162 }, reads: 0 }}]
[{}]
[{NameId(10): LocalData { state: Span { item: Defined, start: 346, end: 347 }, reads: 0 }, NameId(6): LocalData { state: Span { item: Defined, start: 351, end: 352 }, reads: 0 }, NameId(15): LocalData { state: Span { item: Defined, start: 353, end: 354 }, reads: 0 }}, {NameId(6): LocalData { state: Span { item: Defined, start: 409, end: 410 }, reads: 0 }, NameId(16): LocalData { state: Span { item: Defined, start: 386, end: 387 }, reads: 0 }}]
[{NameId(10): LocalData { state: Span { item: Defined, start: 346, end: 347 }, reads: 0 }, NameId(6): LocalData { state: Span { item: Defined, start: 351, end: 352 }, reads: 0 }, NameId(15): LocalData { state: Span { item: Defined, start: 353, end: 354 }, reads: 0 }}]
