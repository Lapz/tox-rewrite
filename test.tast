SOURCE_FILE@[0; 522)
  IMPORT_DEF@[0; 27)
    IMPORT_KW@[0; 6) "import"
    WHITESPACE@[6; 7) " "
    IMPORT_SEGMENT@[7; 10)
      NAME@[7; 10)
        IDENT@[7; 10) "foo"
    COLON_COLON@[10; 12) "::"
    IMPORT_SEGMENT@[12; 15)
      NAME@[12; 15)
        IDENT@[12; 15) "bar"
    COLON_COLON@[15; 17) "::"
    IMPORT_LIST@[17; 26)
      L_CURLY@[17; 18) "{"
      IMPORT_SEGMENT@[18; 21)
        NAME@[18; 21)
          IDENT@[18; 21) "bar"
      COMMA@[21; 22) ","
      IMPORT_SEGMENT@[22; 25)
        NAME@[22; 25)
          IDENT@[22; 25) "Foo"
      R_CURLY@[25; 26) "}"
    SEMI@[26; 27) ";"
  WHITESPACE@[27; 29) "\n\n"
  TYPE_ALIAS_DEF@[29; 66)
    TYPE_KW@[29; 33) "type"
    WHITESPACE@[33; 34) " "
    NAME@[34; 46)
      IDENT@[34; 46) "ParserResult"
    TYPE_PARAM_LIST@[46; 49)
      L_ANGLE@[46; 47) "<"
      TYPE_PARAM@[47; 48)
        NAME@[47; 48)
          IDENT@[47; 48) "T"
      R_ANGLE@[48; 49) ">"
    WHITESPACE@[49; 50) " "
    EQ@[50; 51) "="
    WHITESPACE@[51; 52) " "
    IDENT_TYPE@[52; 65)
      IDENT@[52; 58) "Result"
      TYPE_ARG_LIST@[58; 65)
        L_ANGLE@[58; 59) "<"
        IDENT_TYPE@[59; 60)
          IDENT@[59; 60) "T"
        COMMA@[60; 61) ","
        IDENT_TYPE@[61; 64)
          IDENT@[61; 64) "Foo"
        R_ANGLE@[64; 65) ">"
    SEMI@[65; 66) ";"
  WHITESPACE@[66; 67) "\n"
  TYPE_ALIAS_DEF@[67; 104)
    TYPE_KW@[67; 71) "type"
    WHITESPACE@[71; 72) " "
    NAME@[72; 84)
      IDENT@[72; 84) "ParserResult"
    TYPE_PARAM_LIST@[84; 87)
      L_ANGLE@[84; 85) "<"
      TYPE_PARAM@[85; 86)
        NAME@[85; 86)
          IDENT@[85; 86) "T"
      R_ANGLE@[86; 87) ">"
    WHITESPACE@[87; 88) " "
    EQ@[88; 89) "="
    WHITESPACE@[89; 90) " "
    IDENT_TYPE@[90; 103)
      IDENT@[90; 96) "Result"
      TYPE_ARG_LIST@[96; 103)
        L_ANGLE@[96; 97) "<"
        IDENT_TYPE@[97; 98)
          IDENT@[97; 98) "T"
        COMMA@[98; 99) ","
        IDENT_TYPE@[99; 102)
          IDENT@[99; 102) "Foo"
        R_ANGLE@[102; 103) ">"
    SEMI@[103; 104) ";"
  WHITESPACE@[104; 105) "\n"
  MOD_DEF@[105; 113)
    MOD_KW@[105; 108) "mod"
    WHITESPACE@[108; 109) " "
    NAME@[109; 112)
      IDENT@[109; 112) "bar"
    SEMI@[112; 113) ";"
  WHITESPACE@[113; 114) "\n"
  MOD_DEF@[114; 122)
    MOD_KW@[114; 117) "mod"
    WHITESPACE@[117; 118) " "
    NAME@[118; 121)
      IDENT@[118; 121) "foo"
    SEMI@[121; 122) ";"
  WHITESPACE@[122; 124) "\n\n"
  COMMENT@[124; 366) "/*export fn main()  { ..."
  WHITESPACE@[366; 370) "\n\n\n\n"
  CLASS_DEF@[370; 409)
    CLASS_KW@[370; 375) "class"
    WHITESPACE@[375; 376) " "
    NAME@[376; 379)
      IDENT@[376; 379) "Bza"
    WHITESPACE@[379; 380) " "
    L_CURLY@[380; 381) "{"
    WHITESPACE@[381; 386) "\n    "
    NAMED_FIELD_DEF@[386; 394)
      NAME@[386; 389)
        IDENT@[386; 389) "foo"
      COLON@[389; 390) ":"
      IDENT_TYPE@[390; 393)
        IDENT@[390; 393) "i32"
      SEMI@[393; 394) ";"
    WHITESPACE@[394; 399) "\n    "
    NAMED_FIELD_DEF@[399; 407)
      NAME@[399; 402)
        IDENT@[399; 402) "bar"
      COLON@[402; 403) ":"
      IDENT_TYPE@[403; 406)
        IDENT@[403; 406) "i32"
      SEMI@[406; 407) ";"
    WHITESPACE@[407; 408) "\n"
    R_CURLY@[408; 409) "}"
  WHITESPACE@[409; 411) "\n\n"
  FN_DEF@[411; 522)
    VISIBILITY@[411; 417)
      EXPORT_KW@[411; 417) "export"
    WHITESPACE@[417; 418) " "
    FN_KW@[418; 420) "fn"
    WHITESPACE@[420; 421) " "
    NAME@[421; 423)
      IDENT@[421; 423) "id"
    TYPE_PARAM_LIST@[423; 426)
      L_ANGLE@[423; 424) "<"
      TYPE_PARAM@[424; 425)
        NAME@[424; 425)
          IDENT@[424; 425) "T"
      R_ANGLE@[425; 426) ">"
    PARAM_LIST@[426; 439)
      L_PAREN@[426; 427) "("
      PARAM@[427; 430)
        BIND_PAT@[427; 428)
          NAME@[427; 428)
            IDENT@[427; 428) "a"
        COLON@[428; 429) ":"
        IDENT_TYPE@[429; 430)
          IDENT@[429; 430) "T"
      COMMA@[430; 431) ","
      PARAM@[431; 438)
        TUPLE_PAT@[431; 436)
          L_PAREN@[431; 432) "("
          BIND_PAT@[432; 433)
            NAME@[432; 433)
              IDENT@[432; 433) "x"
          COMMA@[433; 434) ","
          BIND_PAT@[434; 435)
            NAME@[434; 435)
              IDENT@[434; 435) "z"
          R_PAREN@[435; 436) ")"
        COLON@[436; 437) ":"
        IDENT_TYPE@[437; 438)
          IDENT@[437; 438) "T"
      R_PAREN@[438; 439) ")"
    WHITESPACE@[439; 440) " "
    RET_TYPE@[440; 450)
      FRETURN@[440; 442) "->"
      WHITESPACE@[442; 443) " "
      PAREN_TYPE@[443; 450)
        L_PAREN@[443; 444) "("
        IDENT_TYPE@[444; 445)
          IDENT@[444; 445) "T"
        COMMA@[445; 446) ","
        IDENT_TYPE@[446; 449)
          IDENT@[446; 449) "i32"
        R_PAREN@[449; 450) ")"
    WHITESPACE@[450; 451) " "
    BLOCK_EXPR@[451; 522)
      BLOCK@[451; 522)
        L_CURLY@[451; 452) "{"
        WHITESPACE@[452; 457) "\n    "
        LET_STMT@[457; 475)
          LET_KW@[457; 460) "let"
          WHITESPACE@[460; 461) " "
          TUPLE_PAT@[461; 470)
            L_PAREN@[461; 462) "("
            BIND_PAT@[462; 463)
              NAME@[462; 463)
                IDENT@[462; 463) "y"
            COMMA@[463; 464) ","
            TUPLE_PAT@[464; 469)
              L_PAREN@[464; 465) "("
              BIND_PAT@[465; 466)
                NAME@[465; 466)
                  IDENT@[465; 466) "x"
              COMMA@[466; 467) ","
              BIND_PAT@[467; 468)
                NAME@[467; 468)
                  IDENT@[467; 468) "a"
              R_PAREN@[468; 469) ")"
            R_PAREN@[469; 470) ")"
          WHITESPACE@[470; 471) " "
          EQ@[471; 472) "="
          WHITESPACE@[472; 473) " "
          LITERAL@[473; 475)
            INT_NUMBER@[473; 475) "10"
        SEMI@[475; 476) ";"
        WHITESPACE@[476; 482) "\n\n    "
        LET_STMT@[482; 499)
          LET_KW@[482; 485) "let"
          WHITESPACE@[485; 486) " "
          BIND_PAT@[486; 487)
            NAME@[486; 487)
              IDENT@[486; 487) "f"
          WHITESPACE@[487; 489) "  "
          EQ@[489; 490) "="
          WHITESPACE@[490; 491) " "
          ENUM_EXPR@[491; 499)
            IDENT_EXPR@[491; 494)
              NAME@[491; 492)
                IDENT@[491; 492) "A"
              COLON_COLON@[492; 494) "::"
            IDENT_EXPR@[494; 495)
              NAME@[494; 495)
                IDENT@[494; 495) "B"
            PAREN_EXPR@[495; 499)
              L_PAREN@[495; 496) "("
              LITERAL@[496; 498)
                INT_NUMBER@[496; 498) "10"
              R_PAREN@[498; 499) ")"
        SEMI@[499; 500) ";"
        WHITESPACE@[500; 510) "\n    \n    "
        LET_STMT@[510; 519)
          LET_KW@[510; 513) "let"
          WHITESPACE@[513; 514) " "
          BIND_PAT@[514; 515)
            NAME@[514; 515)
              IDENT@[514; 515) "x"
          WHITESPACE@[515; 516) " "
          EQ@[516; 517) "="
          LITERAL@[517; 519)
            INT_NUMBER@[517; 519) "10"
        SEMI@[519; 520) ";"
        WHITESPACE@[520; 521) "\n"
        R_CURLY@[521; 522) "}"

Some(Name { syntax: NAME@[491; 492) })
Some(Name { syntax: NAME@[494; 495) })
Class
Function
Function
Type
Alias
Type
Class
Type
Function
