SOURCE_FILE@[0; 421)
  IMPORT_DEF@[0; 27)
    IMPORT_KW@[0; 6) "import"
    WHITESPACE@[6; 7) " "
    IMPORT_SEGMENT@[7; 10)
      NAME@[7; 10)
        IDENT@[7; 10) "foo"
    COLON_COLON@[10; 12) "::"
    IMPORT_SEGMENT@[12; 15)
      NAME@[12; 15)
        IDENT@[12; 15) "bar"
    COLON_COLON@[15; 17) "::"
    IMPORT_LIST@[17; 26)
      L_CURLY@[17; 18) "{"
      IMPORT_SEGMENT@[18; 21)
        NAME@[18; 21)
          IDENT@[18; 21) "bar"
      COMMA@[21; 22) ","
      IMPORT_SEGMENT@[22; 25)
        NAME@[22; 25)
          IDENT@[22; 25) "Foo"
      R_CURLY@[25; 26) "}"
    SEMI@[26; 27) ";"
  WHITESPACE@[27; 29) "\n\n"
  TYPE_ALIAS_DEF@[29; 66)
    TYPE_KW@[29; 33) "type"
    WHITESPACE@[33; 34) " "
    NAME@[34; 46)
      IDENT@[34; 46) "ParserResult"
    TYPE_PARAM_LIST@[46; 49)
      L_ANGLE@[46; 47) "<"
      TYPE_PARAM@[47; 48)
        NAME@[47; 48)
          IDENT@[47; 48) "T"
      R_ANGLE@[48; 49) ">"
    WHITESPACE@[49; 50) " "
    EQ@[50; 51) "="
    WHITESPACE@[51; 52) " "
    IDENT_TYPE@[52; 65)
      IDENT@[52; 58) "Result"
      TYPE_ARG_LIST@[58; 65)
        L_ANGLE@[58; 59) "<"
        IDENT_TYPE@[59; 60)
          IDENT@[59; 60) "T"
        COMMA@[60; 61) ","
        IDENT_TYPE@[61; 64)
          IDENT@[61; 64) "Foo"
        R_ANGLE@[64; 65) ">"
    SEMI@[65; 66) ";"
  WHITESPACE@[66; 68) "\n\n"
  MOD_DEF@[68; 76)
    MOD_KW@[68; 71) "mod"
    WHITESPACE@[71; 72) " "
    NAME@[72; 75)
      IDENT@[72; 75) "bar"
    SEMI@[75; 76) ";"
  WHITESPACE@[76; 77) "\n"
  MOD_DEF@[77; 85)
    MOD_KW@[77; 80) "mod"
    WHITESPACE@[80; 81) " "
    NAME@[81; 84)
      IDENT@[81; 84) "foo"
    SEMI@[84; 85) ";"
  WHITESPACE@[85; 87) "\n\n"
  COMMENT@[87; 329) "/*export fn main()  { ..."
  WHITESPACE@[329; 334) "\n\n\n\n\n"
  FN_DEF@[334; 421)
    VISIBILITY@[334; 340)
      EXPORT_KW@[334; 340) "export"
    WHITESPACE@[340; 341) " "
    FN_KW@[341; 343) "fn"
    WHITESPACE@[343; 344) " "
    NAME@[344; 346)
      IDENT@[344; 346) "id"
    TYPE_PARAM_LIST@[346; 349)
      L_ANGLE@[346; 347) "<"
      TYPE_PARAM@[347; 348)
        NAME@[347; 348)
          IDENT@[347; 348) "T"
      R_ANGLE@[348; 349) ">"
    PARAM_LIST@[349; 362)
      L_PAREN@[349; 350) "("
      PARAM@[350; 353)
        BIND_PAT@[350; 351)
          NAME@[350; 351)
            IDENT@[350; 351) "a"
        COLON@[351; 352) ":"
        IDENT_TYPE@[352; 353)
          IDENT@[352; 353) "T"
      COMMA@[353; 354) ","
      PARAM@[354; 361)
        TUPLE_PAT@[354; 359)
          L_PAREN@[354; 355) "("
          BIND_PAT@[355; 356)
            NAME@[355; 356)
              IDENT@[355; 356) "x"
          COMMA@[356; 357) ","
          BIND_PAT@[357; 358)
            NAME@[357; 358)
              IDENT@[357; 358) "z"
          R_PAREN@[358; 359) ")"
        COLON@[359; 360) ":"
        IDENT_TYPE@[360; 361)
          IDENT@[360; 361) "T"
      R_PAREN@[361; 362) ")"
    WHITESPACE@[362; 363) " "
    RET_TYPE@[363; 373)
      FRETURN@[363; 365) "->"
      WHITESPACE@[365; 366) " "
      PAREN_TYPE@[366; 373)
        L_PAREN@[366; 367) "("
        IDENT_TYPE@[367; 368)
          IDENT@[367; 368) "T"
        COMMA@[368; 369) ","
        IDENT_TYPE@[369; 372)
          IDENT@[369; 372) "i32"
        R_PAREN@[372; 373) ")"
    WHITESPACE@[373; 374) " "
    BLOCK_EXPR@[374; 421)
      BLOCK@[374; 421)
        L_CURLY@[374; 375) "{"
        WHITESPACE@[375; 380) "\n    "
        LET_STMT@[380; 398)
          LET_KW@[380; 383) "let"
          WHITESPACE@[383; 384) " "
          TUPLE_PAT@[384; 393)
            L_PAREN@[384; 385) "("
            BIND_PAT@[385; 386)
              NAME@[385; 386)
                IDENT@[385; 386) "y"
            COMMA@[386; 387) ","
            TUPLE_PAT@[387; 392)
              L_PAREN@[387; 388) "("
              BIND_PAT@[388; 389)
                NAME@[388; 389)
                  IDENT@[388; 389) "x"
              COMMA@[389; 390) ","
              BIND_PAT@[390; 391)
                NAME@[390; 391)
                  IDENT@[390; 391) "y"
              R_PAREN@[391; 392) ")"
            R_PAREN@[392; 393) ")"
          WHITESPACE@[393; 394) " "
          EQ@[394; 395) "="
          WHITESPACE@[395; 396) " "
          LITERAL@[396; 398)
            INT_NUMBER@[396; 398) "10"
        SEMI@[398; 399) ";"
        WHITESPACE@[399; 409) "\n    \n    "
        LET_STMT@[409; 418)
          LET_KW@[409; 412) "let"
          WHITESPACE@[412; 413) " "
          BIND_PAT@[413; 414)
            NAME@[413; 414)
              IDENT@[413; 414) "x"
          WHITESPACE@[414; 415) " "
          EQ@[415; 416) "="
          LITERAL@[416; 418)
            INT_NUMBER@[416; 418) "10"
        SEMI@[418; 419) ";"
        WHITESPACE@[419; 420) "\n"
        R_CURLY@[420; 421) "}"

[{NameId(7): LocalData { state: Span { item: Defined, start: 355, end: 356 }, reads: 0 }, NameId(8): LocalData { state: Span { item: Defined, start: 357, end: 358 }, reads: 0 }, NameId(6): LocalData { state: Span { item: Defined, start: 350, end: 351 }, reads: 0 }}, {NameId(9): LocalData { state: Span { item: Defined, start: 390, end: 391 }, reads: 0 }, NameId(7): LocalData { state: Span { item: Defined, start: 413, end: 414 }, reads: 0 }}]
NameId(9) Name("y") 0 Span { item: Defined, start: 390, end: 391 }
NameId(7) Name("x") 0 Span { item: Defined, start: 413, end: 414 }
[{NameId(7): LocalData { state: Span { item: Defined, start: 355, end: 356 }, reads: 0 }, NameId(8): LocalData { state: Span { item: Defined, start: 357, end: 358 }, reads: 0 }, NameId(6): LocalData { state: Span { item: Defined, start: 350, end: 351 }, reads: 0 }}]
NameId(7) Name("x") 0 Span { item: Defined, start: 355, end: 356 }
NameId(8) Name("z") 0 Span { item: Defined, start: 357, end: 358 }
NameId(6) Name("a") 0 Span { item: Defined, start: 350, end: 351 }
